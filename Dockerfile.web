# Dockerfile pour la version Web
FROM ubuntu:22.04

# Éviter les interactions pendant l'installation
ENV DEBIAN_FRONTEND=noninteractive

# Installation des dépendances
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    default-jdk \
    wget \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Créer un utilisateur non-root
RUN useradd -ms /bin/bash developer
USER developer
WORKDIR /home/developer

# Configurer Git
RUN git config --global --add safe.directory '*'

# Télécharger et installer Flutter
RUN git clone https://github.com/flutter/flutter.git -b stable /home/developer/flutter

# Ajouter flutter au PATH
ENV PATH="/home/developer/flutter/bin:${PATH}"

# Préconfigurer Flutter
RUN flutter precache
RUN flutter doctor

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers du projet
COPY --chown=developer:developer . .

# Supprimer l'ancien .metadata s'il existe
RUN rm -f .metadata

# Activer le support web et recréer le projet
RUN flutter config --enable-web
RUN flutter create --platforms=web --org com.vegnbio .
RUN flutter pub get

# Build l'application en mode production
RUN flutter build web --release

# Les en-têtes de sécurité sont gérés par nginx

# Générer le hash des fichiers pour vérification d'intégrité
RUN cd build/web && find . -type f -exec sha256sum {} \; > checksums.txt

# Copier les fichiers buildés dans le dossier de serveur web
RUN mkdir -p /app/web-build
RUN cp -r build/web/* /app/web-build/

# Configuration nginx
USER root
COPY nginx.conf /etc/nginx/nginx.conf

# Exposer le port
EXPOSE 4200

# Commande pour lancer nginx
CMD ["nginx", "-g", "daemon off;"]